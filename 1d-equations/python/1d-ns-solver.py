#!/usr/bin/env python3
"""========================================================================
Purpose:
    The purpose of this script is to calculate resolve 1D Navier-Stokes
    equation (i.e., u(y)).

Author:
    Emilio Torres 
========================================================================"""
#=========================================================================#
# Preamble                                                                #
#=========================================================================#
#-------------------------------------------------------------------------#
# Python preamble                                                         #
#-------------------------------------------------------------------------#
import os
import sys
from subprocess import call
from numpy import *
import matplotlib.pyploy as plt
#=========================================================================#
# User defined functions                                                  #
#=========================================================================#
#-------------------------------------------------------------------------#
# Pressure calculator                                                     #
#-------------------------------------------------------------------------#
def pressure_calculator(
        num,
        Dx,
        Dt,
        Vstar,
        P_old):
    """ Calculating the pressure """
    #---------------------------------------------------------------------#
    # Calculating RHS                                                     #
    #---------------------------------------------------------------------#

#=========================================================================#
# Main                                                                    #
#=========================================================================#
if __name__ == '__main__':
    #---------------------------------------------------------------------#
    # Main preamble                                                       #
    #---------------------------------------------------------------------#
    call(['clear'])
    sep         = os.sep
    pwd         = os.getcwd()
    data_path   = pwd + '%cdata%c'          %(sep,sep)
    #---------------------------------------------------------------------#
    # Domain variables                                                    #
    #---------------------------------------------------------------------#
    M       = 64
    y       = linspace(0.0, 1.0, M+1) 
    nu      = 0.005
    dx      = 1.0/float(M)
    rdx     = 1./dx
    rdx2    = 1./dx**2.
    dt      = 0.5*nu/dx
    t       = 0.0
    tfinal  = 1.0
    #---------------------------------------------------------------------#
    # Wall velocities                                                     #
    #---------------------------------------------------------------------#
    ub  = 0.0
    ut  = 1.0
    vt  = 0.0
    vb  = 0.0
    #---------------------------------------------------------------------#
    # Preallocating variables                                             #
    #---------------------------------------------------------------------#
    v       = zeros(M+1)
    vstar   = zeros(M+1)
    u       = zeros(M+2)
    p_old   = zeros(M+2)
    #---------------------------------------------------------------------#
    # Defining boundary conditions                                        #
    #---------------------------------------------------------------------#
    u[0]    = 2.0*ub-u[1] 
    u[M+1]  = 2.0*ut-u[M] 
    v[0]    = vb
    v[M]    = vt
    #---------------------------------------------------------------------#
    # Time loop                                                           #
    #---------------------------------------------------------------------#
    while t > tfinal:
        #-----------------------------------------------------------------#
        # Calculating v star                                              #
        #-----------------------------------------------------------------#
        for j in range(1, M):
            v1          = 0.5*(v[j+1] + v[j])
            v2          = 0.5*(v[j] + v[j-1])
            vstar[j]    = v[j] - dt*rdx*(v1**2.0 - v2**2.0) + \
                                dt*rdx2*nu*(v[j+1] - 2.*v[j] + v[j-1]) 
        #-----------------------------------------------------------------#
        # Calculating pressure                                            #
        #-----------------------------------------------------------------#
